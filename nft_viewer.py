import requests

def fetch_recent_sales(limit=10):
    url = "https://api.opensea.io/api/v2/events"
    headers = {
        "accept": "application/json",
    }
    params = {
        "event_type": "sale",
        "limit": limit,
    }

    try:
        response = requests.get(url, headers=headers, params=params)
        response.raise_for_status()
        events = response.json().get("asset_events", [])

        if not events:
            print("–ù–µ—Ç —Å–≤–µ–∂–∏—Ö –ø—Ä–æ–¥–∞–∂ NFT.")
            return

        print(f"\nüñº –ü–æ—Å–ª–µ–¥–Ω–∏–µ {limit} –ø—Ä–æ–¥–∞–∂ NFT –Ω–∞ OpenSea:\n")
        for event in events:
            nft = event.get("nft", {})
            name = nft.get("name", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
            collection = nft.get("collection", {}).get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è")
            permalink = nft.get("opensea_url", "")
            price_info = event.get("payment", {})
            price = float(price_info.get("quantity", "0")) / 10 ** int(price_info.get("decimals", 0))
            symbol = price_info.get("symbol", "ETH")

            print(f"üîπ {name} –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ {collection} ‚Üí {price:.4f} {symbol}")
            print(f"   {permalink}\n")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    fetch_recent_sales()
